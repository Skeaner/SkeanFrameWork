import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-allopen"
apply plugin: "kotlin-kapt"


greendao {
    schemaVersion 1
}

allOpen {
    annotation("org.androidannotations.api.KotlinOpen")
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    signingConfigs {
        //todo 修改签名文件
        config {
            keyAlias 'test'
            keyPassword '123456'
            storeFile file('test.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        //todo 修改程序ID
        applicationId "skean.yzsm.com.framework"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        kapt {
            arguments {
                arg('eventBusIndex', 'me.skean.skeanframework.EventBusIndex')
                arg('resourcePackageName', android.defaultConfig.applicationId)
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                def dateStr = new SimpleDateFormat("MMddHHmm", Locale.US).format(new Date())
                def shortAppId = "${defaultConfig.applicationId}".substring("${defaultConfig.applicationId}".lastIndexOf(".") + 1)
                def versionTag = variant.buildType.isDebuggable() ? "d" : "r"
                outputFileName = "${shortAppId}-${variant.versionName}${versionTag}(b${variant.versionCode})-${dateStr}.apk"
            }
        }
    }
    buildTypes {
        //todo 通用的配置
        def appTag = "\"" + "${defaultConfig.applicationId}".substring("${defaultConfig.applicationId}".lastIndexOf(".") + 1) + "\""
        def useExternalDatabase = false
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
            signingConfig signingConfigs.config
            buildConfigField "String", "APP_TAG", "${appTag}"
            buildConfigField "boolean", "USE_EXTERNAL_DB", "${useExternalDatabase}"
        }
        debug {
            signingConfig signingConfigs.config
            buildConfigField "String", "APP_TAG", "${appTag}"
            buildConfigField "boolean", "USE_EXTERNAL_DB", "${useExternalDatabase}"
        }
    }

    flavorDimensions "default"
    productFlavors {
        //todo 渠道打包配置配置
        // 发布环境
        production {
            dimension "default"
            buildConfigField "String", "BUGLY_APPID", '"ccced6668f"'
            buildConfigField "boolean", "LOG_TO_FILE", 'true'
            resValue "string", "app_name", 'SFW'
            buildConfigField "boolean", "LOG_TO_FILE", 'true'
        }
        // 测试环境
        beta {
            dimension "default"
            applicationId "${defaultConfig.applicationId}.beta" // 测试版
            buildConfigField "String", "BUGLY_APPID", '"ccced6668f"'
            buildConfigField "boolean", "LOG_TO_FILE", 'true'
            resValue "string", "app_name", 'SFW-beta'
        }
        // 开发
        develop {
            dimension "default"
            applicationId "${defaultConfig.applicationId}.develop" // 开发版
            buildConfigField "String", "BUGLY_APPID", '"ccced6668f"'
            buildConfigField "boolean", "LOG_TO_FILE", 'false'
            resValue "string", "app_name", 'SFW-dev'
        }
    }


    sourceSets {
        main {
            java.srcDirs += 'build/generated/source/greendao'
            jniLibs.srcDirs = ['libs']
            res.srcDirs = [
                    'src/main/res/'
            ]
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/androidx.exifinterface_exifinterface.version'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://dl.bintray.com/skean/maven" }
}


dependencies {
    implementation project(path: ':skeanframework')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"
    kapt "org.androidannotations:androidannotations:4.6.0"
    kapt 'com.github.AleksanderMielczarek:AndroidAnnotationsPermissionsDispatcherPlugin:2.1.1'
    kapt 'org.greenrobot:eventbus-annotation-processor:3.1.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.0'
}
